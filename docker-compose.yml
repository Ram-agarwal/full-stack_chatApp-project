

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend
    container_name: backend
    env_file:
      - ./backend/.env
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - mongodb

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend
    container_name: frontend
    ports:
      - "80:80"       # Nginx
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoadmin
      MONGO_INITDB_ROOT_PASSWORD: secret
      MONGO_INITDB_DATABASE: dbname
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mongo --username mongoadmin --password secret --eval 'db.adminCommand(\"ping\")' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  mongo_data:

